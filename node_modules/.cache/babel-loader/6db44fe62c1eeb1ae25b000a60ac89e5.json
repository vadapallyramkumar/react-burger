{"ast":null,"code":"var _jsxFileName = \"/home/gaian/Desktop/Mine/github/1606Github/burger/src/Components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../Assets/Main.css'; // import BurgerLowerBun from '../Assets/Images/burger-bottombun.png'\n// import BurgerTopBun from '../Assets/Images/burger-topbun.png'\n\nimport TopBun from '../Assets/Images/topBun.png';\nimport LowBun from '../Assets/Images/lowBun.png';\nimport Tomato from '../Assets/Images/Tomato.png';\nimport Chicken from '../Assets/Images/chicken.png';\nimport Cheese from '../Assets/Images/Cheese.png';\nimport Butter from '../Assets/Images/Butter.png';\nimport Lettuce from '../Assets/Images/Lettuce.png';\nimport BurgerCustomize from './BurgerCustomize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [burgeritems, setburgeritems] = useState([]);\n  const [chicken, setchicken] = useState(0);\n  const [tomato, settomato] = useState(0);\n  const [cheese, setcheese] = useState(0);\n  const [butter, setbutter] = useState(0);\n  const [lettuce, setlettuce] = useState(0);\n\n  const createBurger = (path, type) => {\n    console.log('fn: createBurger');\n    setburgeritems([{\n      path: path,\n      type: type\n    }, ...burgeritems]);\n\n    switch (type) {\n      case 'chicken':\n        setchicken(chicken + 1);\n        break;\n\n      case 'tomato':\n        settomato(tomato + 1);\n        break;\n\n      case 'cheese':\n        setcheese(cheese + 1);\n        break;\n\n      case 'butter':\n        setbutter(butter + 1);\n        break;\n\n      case 'lettuce':\n        setlettuce(lettuce + 1);\n        break;\n\n      default:\n        console.log(type);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      children: \"Burger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Burger\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: TopBun,\n          alt: \"BurgerTopBun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), burgeritems.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: burgeritems.map(item => {\n            console.log(item);\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.path[item.type],\n              alt: item.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: LowBun,\n          alt: \"BurgerLowerBun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BurgerCustomize, {\n      Customize: createBurger,\n      chickenCount: chicken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"m4Uf5Hw/4BuJXBHmuD1WGo7rnpg=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/gaian/Desktop/Mine/github/1606Github/burger/src/Components/Main.js"],"names":["React","useState","TopBun","LowBun","Tomato","Chicken","Cheese","Butter","Lettuce","BurgerCustomize","Main","burgeritems","setburgeritems","chicken","setchicken","tomato","settomato","cheese","setcheese","butter","setbutter","lettuce","setlettuce","createBurger","path","type","console","log","length","map","item"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport '../Assets/Main.css'\n// import BurgerLowerBun from '../Assets/Images/burger-bottombun.png'\n// import BurgerTopBun from '../Assets/Images/burger-topbun.png'\nimport TopBun from '../Assets/Images/topBun.png'\nimport LowBun from '../Assets/Images/lowBun.png'\nimport Tomato from '../Assets/Images/Tomato.png'\nimport Chicken from '../Assets/Images/chicken.png'\nimport Cheese from '../Assets/Images/Cheese.png'\nimport Butter from '../Assets/Images/Butter.png'\nimport Lettuce from '../Assets/Images/Lettuce.png'\nimport BurgerCustomize from './BurgerCustomize'\n\nfunction Main() {\n    const [burgeritems, setburgeritems] = useState([]);\n    const [chicken, setchicken] = useState(0)\n    const [tomato, settomato] = useState(0)\n    const [cheese, setcheese] = useState(0)\n    const [butter, setbutter] = useState(0)\n    const [lettuce, setlettuce] = useState(0)\n    const createBurger = (path, type) => {\n        console.log('fn: createBurger');\n        setburgeritems([{\n            path: path,\n            type: type\n        }, ...burgeritems])\n        switch(type) {\n            case 'chicken':\n                setchicken(chicken + 1);\n                break;\n            case 'tomato':\n                settomato(tomato + 1);\n                break;\n            case 'cheese':\n                setcheese(cheese + 1);\n                break;\n            case 'butter':\n                setbutter(butter + 1);\n                break;\n            case 'lettuce':\n                setlettuce(lettuce + 1);\n                break;\n            default:\n                console.log(type)\n        }\n    }\n\n    return (\n        <div>\n            <div className='Title'>\n                Burger\n            </div>\n            <div className=\"Burger\">\n                <>\n                    <img src={TopBun} alt='BurgerTopBun'/>\n                    {/* <img src={Tomato} alt='BurgerTopBun'/>\n                    <img src={Chicken} alt='BurgerTopBun'/>\n                    <img src={Cheese} alt='BurgerTopBun'/>\n                    <img src={Butter} alt='BurgerTopBun'/>\n                    <img src={Lettuce} alt='BurgerTopBun'/> */}\n                    {/* <p>No Items</p> */}\n                    {\n                            burgeritems.length > 0 && <>{\n                                burgeritems.map((item) => {\n                                    console.log(item)\n                                    return(\n                                        <img src={item.path[item.type]} alt={item.type} />\n                                    )\n                                })\n                                }</>\n                        }\n                    <img src={LowBun} alt='BurgerLowerBun'/>\n                </>\n            </div>\n            <BurgerCustomize Customize={createBurger} chickenCount={chicken}/>\n        </div>\n        \n    )\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}